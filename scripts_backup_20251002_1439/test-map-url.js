// Script para probar la generaci√≥n de URL del mapa para MGC Dental Health

// Simular los datos del servicio MGC como est√°n en Firebase
const mgcService = {
  nombre: "Mgc Dental Health",
  direccion: "Santa Nicerata 372",
  direccion_completa: "Santa Nicerata 372, Lima, Per√∫",
  coordenadas: {
    lat: -12.0432,
    lng: -77.0282
  },
  zona: "Lima Centro",
  neighborhood: "Lima Centro"
};

// Funci√≥n getMapUrl del componente ServiceMap
function getMapUrl(service) {
  console.log('üîç Procesando datos del servicio:');
  console.log('   Coordenadas:', service.coordenadas);
  console.log('   Direcci√≥n completa:', service.direccion_completa);
  console.log('   Address:', service.address);
  console.log('   Neighborhood:', service.neighborhood);
  console.log('');

  // Prioridad: coordenadas > direcci√≥n completa > direcci√≥n existente > barrio
  if (service.coordenadas) {
    const { lat, lng } = service.coordenadas;
    const url = `https://www.google.com/maps?q=${lat},${lng}&output=embed`;
    console.log('‚úÖ Usando COORDENADAS para generar URL:');
    console.log('   URL:', url);
    return url;
  }
  
  if (service.direccion_completa) {
    const query = encodeURIComponent(service.direccion_completa);
    const url = `https://www.google.com/maps?q=${query}&output=embed`;
    console.log('‚úÖ Usando DIRECCI√ìN COMPLETA para generar URL:');
    console.log('   URL:', url);
    return url;
  }
  
  if (service.address) {
    const query = encodeURIComponent(service.address);
    const url = `https://www.google.com/maps?q=${query}&output=embed`;
    console.log('‚úÖ Usando ADDRESS para generar URL:');
    console.log('   URL:', url);
    return url;
  }
  
  if (service.neighborhood) {
    const query = encodeURIComponent(`${service.neighborhood}, Lima, Per√∫`);
    const url = `https://www.google.com/maps?q=${query}&output=embed`;
    console.log('‚úÖ Usando NEIGHBORHOOD para generar URL:');
    console.log('   URL:', url);
    return url;
  }
  
  console.log('‚ùå No se pudo generar URL - sin datos de ubicaci√≥n');
  return null;
}

// Funci√≥n getDirectionsUrl del componente ServiceMap
function getDirectionsUrl(service) {
  console.log('\nüß≠ Generando URL de direcciones:');
  
  if (service.coordenadas) {
    const { lat, lng } = service.coordenadas;
    const url = `https://www.google.com/maps/dir/?api=1&destination=${lat},${lng}`;
    console.log('‚úÖ Usando COORDENADAS para direcciones:');
    console.log('   URL:', url);
    return url;
  }
  
  const address = service.direccion_completa || service.address || service.neighborhood;
  if (address) {
    const query = encodeURIComponent(address);
    const url = `https://www.google.com/maps/dir/?api=1&destination=${query}`;
    console.log('‚úÖ Usando DIRECCI√ìN para direcciones:');
    console.log('   Direcci√≥n:', address);
    console.log('   URL:', url);
    return url;
  }
  
  console.log('‚ùå No se pudo generar URL de direcciones');
  return null;
}

console.log('üó∫Ô∏è  PRUEBA DE GENERACI√ìN DE URLs PARA MGC DENTAL HEALTH');
console.log('=====================================================\n');

const mapUrl = getMapUrl(mgcService);
const directionsUrl = getDirectionsUrl(mgcService);

console.log('\nüìã RESUMEN:');
console.log('===========');
console.log('URL del mapa:', mapUrl);
console.log('URL de direcciones:', directionsUrl);

// Verificar si las URLs apuntan a la ubicaci√≥n correcta
if (mapUrl && mapUrl.includes('-12.0432,-77.0282')) {
  console.log('‚úÖ La URL del mapa contiene las coordenadas correctas');
} else if (mapUrl && mapUrl.includes('Santa%20Nicerata%20372')) {
  console.log('‚úÖ La URL del mapa contiene la direcci√≥n correcta');
} else {
  console.log('‚ö†Ô∏è  La URL del mapa podr√≠a no apuntar a la ubicaci√≥n correcta');
}

console.log('\nüîó URLs para probar manualmente:');
console.log('================================');
console.log('Mapa embebido:', mapUrl);
console.log('Direcciones:', directionsUrl);
console.log('Mapa normal:', mapUrl?.replace('&output=embed', ''));